// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OngProject.Infrastructure.Data;

namespace OngProject.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210727023202_userPhotoSeed")]
    partial class userPhotoSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484310",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484311",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484312",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484313",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484314",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484315",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484316",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484317",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484318",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484319",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484330",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7033"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484331",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7033"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484332",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7033"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484333",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7033"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484334",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7033"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484335",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7033"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484336",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7033"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484337",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7033"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484338",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7033"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484339",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7033"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("OngProject.Core.Entities.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(65535)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Test number 1",
                            CreatedAt = new DateTime(2021, 7, 26, 23, 32, 1, 840, DateTimeKind.Local).AddTicks(929),
                            Image = "https://placeimg.com/640/480/any",
                            IsDeleted = false,
                            Name = "Activity number 1"
                        },
                        new
                        {
                            Id = 2,
                            Content = "Test number 2",
                            CreatedAt = new DateTime(2021, 7, 26, 23, 32, 1, 841, DateTimeKind.Local).AddTicks(8693),
                            Image = "https://placeimg.com/640/480/any",
                            IsDeleted = false,
                            Name = "Activity number 2"
                        },
                        new
                        {
                            Id = 3,
                            Content = "Test number 3",
                            CreatedAt = new DateTime(2021, 7, 26, 23, 32, 1, 841, DateTimeKind.Local).AddTicks(8925),
                            Image = "https://placeimg.com/640/480/any",
                            IsDeleted = false,
                            Name = "Activity number 3"
                        },
                        new
                        {
                            Id = 4,
                            Content = "Test number 4",
                            CreatedAt = new DateTime(2021, 7, 26, 23, 32, 1, 841, DateTimeKind.Local).AddTicks(9030),
                            Image = "https://placeimg.com/640/480/any",
                            IsDeleted = false,
                            Name = "Activity number 4"
                        },
                        new
                        {
                            Id = 5,
                            Content = "Test number 5",
                            CreatedAt = new DateTime(2021, 7, 26, 23, 32, 1, 841, DateTimeKind.Local).AddTicks(9082),
                            Image = "https://placeimg.com/640/480/any",
                            IsDeleted = false,
                            Name = "Activity number 5"
                        },
                        new
                        {
                            Id = 6,
                            Content = "Test number 6",
                            CreatedAt = new DateTime(2021, 7, 26, 23, 32, 1, 841, DateTimeKind.Local).AddTicks(9138),
                            Image = "https://placeimg.com/640/480/any",
                            IsDeleted = false,
                            Name = "Activity number 6"
                        },
                        new
                        {
                            Id = 7,
                            Content = "Test number 7",
                            CreatedAt = new DateTime(2021, 7, 26, 23, 32, 1, 841, DateTimeKind.Local).AddTicks(9414),
                            Image = "https://placeimg.com/640/480/any",
                            IsDeleted = false,
                            Name = "Activity number 7"
                        },
                        new
                        {
                            Id = 8,
                            Content = "Test number 8",
                            CreatedAt = new DateTime(2021, 7, 26, 23, 32, 1, 841, DateTimeKind.Local).AddTicks(9808),
                            Image = "https://placeimg.com/640/480/any",
                            IsDeleted = false,
                            Name = "Activity number 8"
                        },
                        new
                        {
                            Id = 9,
                            Content = "Test number 9",
                            CreatedAt = new DateTime(2021, 7, 26, 23, 32, 1, 841, DateTimeKind.Local).AddTicks(9931),
                            Image = "https://placeimg.com/640/480/any",
                            IsDeleted = false,
                            Name = "Activity number 9"
                        },
                        new
                        {
                            Id = 10,
                            Content = "Test number 10",
                            CreatedAt = new DateTime(2021, 7, 26, 23, 32, 1, 841, DateTimeKind.Local).AddTicks(9971),
                            Image = "https://placeimg.com/640/480/any",
                            IsDeleted = false,
                            Name = "Activity number 10"
                        });
                });

            modelBuilder.Entity("OngProject.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("OngProject.Core.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("OngProject.Core.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasMaxLength(65535)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("OngProject.Core.Entities.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FacebookUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("InstagramUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LinkedinUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("OngProject.Core.Entities.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("News");
                });

            modelBuilder.Entity("OngProject.Core.Entities.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutUsText")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)");

                    b.Property<string>("FacebookUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstagramUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LinkedInUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("WelcomeText")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AboutUsText = "About Ong",
                            Address = "Address Ong",
                            CreatedAt = new DateTime(2021, 7, 26, 23, 32, 1, 842, DateTimeKind.Local).AddTicks(8537),
                            Email = "Email Ong",
                            FacebookUrl = "Facebook Url",
                            Image = "https://placeimg.com/640/480/any",
                            InstagramUrl = "Instagram Url",
                            IsDeleted = false,
                            LinkedInUrl = "Linedin Url",
                            Name = "ONG",
                            Phone = "+54112563256",
                            WelcomeText = "Welcome Ong"
                        });
                });

            modelBuilder.Entity("OngProject.Core.Entities.Rol", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            ConcurrencyStamp = "3",
                            Name = "Admin",
                            NormalizedName = "Admin"
                        },
                        new
                        {
                            Id = "c7b013f0-5201-4317-abd8-c211f91b7033",
                            ConcurrencyStamp = "4",
                            Name = "Common",
                            NormalizedName = "Common"
                        });
                });

            modelBuilder.Entity("OngProject.Core.Entities.Slide", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Slides");
                });

            modelBuilder.Entity("OngProject.Core.Entities.Testimonial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("ntext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Testimonials");
                });

            modelBuilder.Entity("OngProject.Core.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Photo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484310",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "afedfc13-45e3-4bed-b347-0a795e8aea5b",
                            Email = "mail10@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 10",
                            IsDeleted = false,
                            LastName = "LastName 10",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail10@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAENLAZeWEod4IdWbjalq3NPH89FVsN2YpzNJF5mFl8VyjprNJsLvA4uPsJfUtsj+eOQ==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "2eca57d6-b175-4609-8e74-8b1f241f0fce",
                            TwoFactorEnabled = false,
                            UserName = "User 10"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484311",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "00679348-8485-4739-af44-b8a5aea8cfc6",
                            Email = "mail11@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 11",
                            IsDeleted = false,
                            LastName = "LastName 11",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail11@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEDuiGMQkfOit11pIvCBUBTNCR1rhszmQir87xET9qKad90SQFQ7xIdncGdzHvGAMsA==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "0cfc5af9-3d03-4ac5-b549-45a393ee7d7f",
                            TwoFactorEnabled = false,
                            UserName = "User 11"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484312",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "37c0cbbd-f2fc-4a98-8924-c6b04e93dc67",
                            Email = "mail12@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 12",
                            IsDeleted = false,
                            LastName = "LastName 12",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail12@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEBvpuJx99m9bbzSPFQ3FTH7Nxi4cebTpzCP07SQxA4XbFEolMQ/BL/vfqW9PaLQkaw==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "1afc424e-ea8c-433b-9db7-53157dd2229e",
                            TwoFactorEnabled = false,
                            UserName = "User 12"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484313",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5b34aa0b-5d36-444a-950c-61e467579960",
                            Email = "mail13@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 13",
                            IsDeleted = false,
                            LastName = "LastName 13",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail13@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEBmrych17BeSILFv5RZtIa8C6JFDkK4byKm0hNSah2Cy9Lw3Vw45pDCnuQPYIocVig==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "bf077cf1-1dc9-4501-b364-fa635547557e",
                            TwoFactorEnabled = false,
                            UserName = "User 13"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484314",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9ab94447-d3f7-4ab1-a6c9-65a3ca769edf",
                            Email = "mail14@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 14",
                            IsDeleted = false,
                            LastName = "LastName 14",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail14@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEKmTDDD9ZCMvnRzyMgBnmk4itGIz72imXCFJeePJUJ4PYqr1kZv6RefWFRYrg5SPXQ==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "ef945d5c-ab10-47d1-bc4c-ca869e980fe6",
                            TwoFactorEnabled = false,
                            UserName = "User 14"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484315",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7620f6a1-2187-414d-a32b-146de3b36846",
                            Email = "mail15@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 15",
                            IsDeleted = false,
                            LastName = "LastName 15",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail15@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEBWvmsUxV4xxzi/rHWj2e7u5CdGlkQopWwUHfvRVa0eXyWkTojLLPlXbv70AWVZFTg==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "bd52656f-d578-40fb-a90b-f92a1d6a2d87",
                            TwoFactorEnabled = false,
                            UserName = "User 15"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484316",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5be88f9c-0ad4-4f2a-b64e-beeb2496ed97",
                            Email = "mail16@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 16",
                            IsDeleted = false,
                            LastName = "LastName 16",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail16@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAELoR/6aq69Nr29amm0lywLH4rMJi2zWOzqwXZ17MEWVWpjAGXWj0jYHzW+AjOHwStg==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "a094885b-4f8c-4cc0-9a8d-d6e699a8b5fa",
                            TwoFactorEnabled = false,
                            UserName = "User 16"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484317",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "16cf5fca-367f-4905-abdc-3ccb92ad82c3",
                            Email = "mail17@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 17",
                            IsDeleted = false,
                            LastName = "LastName 17",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail17@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEPzzWLG4K4qs0qtZLZQDFKMBzrQJPQCEuaXBAJRl/TC59UWSkD1DgyP4xastOUUnjg==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "9c61dca3-c052-429a-871e-a9460322e696",
                            TwoFactorEnabled = false,
                            UserName = "User 17"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484318",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3a271584-84c6-4532-a725-d1b94e1babb7",
                            Email = "mail18@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 18",
                            IsDeleted = false,
                            LastName = "LastName 18",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail18@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEDf3cTaIDBFnexgxSqVzzfIhzk9RgYjiW+kY/VCBe4ShYsPrll+zjAuXbMQVoFFmdA==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "e32334da-9d1d-4289-a148-8455e81d64db",
                            TwoFactorEnabled = false,
                            UserName = "User 18"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484319",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f00df5e4-4421-4ec5-a6b4-9c9469ed54b6",
                            Email = "mail19@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 19",
                            IsDeleted = false,
                            LastName = "LastName 19",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail19@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEILmM7JQ9VP9d9khZ3RuN6ZbLjThPpQO+JjxY7U8cKlqJPAIH6nsI3Qi2e89nUIIhg==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "365e3883-c3f0-44f4-a6cb-2ff1505448b8",
                            TwoFactorEnabled = false,
                            UserName = "User 19"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484330",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2f679f39-2e3d-4483-8ff4-e1ff397d1824",
                            Email = "mail30@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 30",
                            IsDeleted = false,
                            LastName = "LastName 30",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail30@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAELJMnYeUzSvoCPBniKtlYEwvNylH+SLq+mhUa3S5ge1mykUxkowEDRz+LAoH3EgDYQ==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2eeb9da0-768c-40d7-b788-93c2ae288a5e",
                            TwoFactorEnabled = false,
                            UserName = "User 30"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484331",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0f3491ad-76f6-4498-9c7c-531363164910",
                            Email = "mail31@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 31",
                            IsDeleted = false,
                            LastName = "LastName 31",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail31@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEOttax2XlNk7gVI/FDEd/bC4+LPTtHuxexN58WX5+OrqqTGWXc36bZ9uy7MMNx/5yg==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "74069723-ef68-41d4-997c-574c2fa8dffa",
                            TwoFactorEnabled = false,
                            UserName = "User 31"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484332",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "05ff992f-6b85-4a09-8f83-328fdc675292",
                            Email = "mail32@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 32",
                            IsDeleted = false,
                            LastName = "LastName 32",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail32@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEK4Uwg/Ivv+rmB7bWwdQTeVKzm3bXBAv3kP7AXV1Albkz4hHzRH9I8Aj0AZIfAKn6g==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "76b7f958-f614-4126-b161-596b6ece671f",
                            TwoFactorEnabled = false,
                            UserName = "User 32"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484333",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c14f113d-ffa9-40a1-8c50-29e5c4d8b88a",
                            Email = "mail33@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 33",
                            IsDeleted = false,
                            LastName = "LastName 33",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail33@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEPfSRHGQfBLba/Ny61992AU7z5IYowKbErE3J2p71xPC+Jl+foA+1wbhW9VXSfgEvw==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "674d43d7-a62e-432e-88f9-ce408348c930",
                            TwoFactorEnabled = false,
                            UserName = "User 33"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484334",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "83022dab-c225-4b27-8dd4-2676fbfd6e9b",
                            Email = "mail34@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 34",
                            IsDeleted = false,
                            LastName = "LastName 34",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail34@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEGp58lA20qgTiG6DB/dtHAQbYMBhDaXFem8MQuVxrMWyPd7f/HW3rCGCOveMqYHurA==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8fe98dae-d4fd-467b-bbd3-c8955b222205",
                            TwoFactorEnabled = false,
                            UserName = "User 34"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484335",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a486ccad-d8ff-4813-92c9-e7e2278988d7",
                            Email = "mail35@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 35",
                            IsDeleted = false,
                            LastName = "LastName 35",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail35@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEMdrzNItbgiRMuBGnamBGgoRGL1/t/ZT47HtNvesJiDWNhAadGBLeLtC8OiXZiVTRA==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1ef3cf43-6d2a-4f85-a061-7ac18cf76392",
                            TwoFactorEnabled = false,
                            UserName = "User 35"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484336",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7a359c31-db60-4295-8f94-b48cf5083506",
                            Email = "mail36@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 36",
                            IsDeleted = false,
                            LastName = "LastName 36",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail36@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEBpFAYH3vf/F/ap28x/IKkITuIvjHvWCrAMYWkNQAyjroNysvC7FWenA5ls2906HhQ==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "51e693c1-237e-4c35-ad0a-96f293a90a79",
                            TwoFactorEnabled = false,
                            UserName = "User 36"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484337",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f400cae7-2e6b-4393-83b7-3c9a94e5f829",
                            Email = "mail37@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 37",
                            IsDeleted = false,
                            LastName = "LastName 37",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail37@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEIKHGsF6/OUoiTiJLHuVLlDDFZiuWYTbfBNoU2u/lzO7WGDwqOYoBJumlQtZ6RYnnw==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6baa13b8-6b92-4ff1-800b-2cd378a146b8",
                            TwoFactorEnabled = false,
                            UserName = "User 37"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484338",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9e751298-79fb-45b3-97d9-acab09199765",
                            Email = "mail38@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 38",
                            IsDeleted = false,
                            LastName = "LastName 38",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail38@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEDYeCnAQp5iBM4ZDHQNnt5GBe7u3sdRCyH9k38b3z64vsjwPSMWQM0Ani48VhAtiag==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ed48bae5-5324-40c5-bf35-ae746432db06",
                            TwoFactorEnabled = false,
                            UserName = "User 38"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484339",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "34b00623-2c67-40a6-9852-78429e228247",
                            Email = "mail39@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 39",
                            IsDeleted = false,
                            LastName = "LastName 39",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail39@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEMZrH03EWS3Vi5iiLj4Gk/t96a42yN7hBpwVdOerFdBlmktZBkOu8veQDt/Pj74apw==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "80dbb85d-b19b-4695-be6a-e0ea2f659df3",
                            TwoFactorEnabled = false,
                            UserName = "User 39"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("OngProject.Core.Entities.Rol", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("OngProject.Core.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("OngProject.Core.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("OngProject.Core.Entities.Rol", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OngProject.Core.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("OngProject.Core.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OngProject.Core.Entities.Comment", b =>
                {
                    b.HasOne("OngProject.Core.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OngProject.Core.Entities.News", b =>
                {
                    b.HasOne("OngProject.Core.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("OngProject.Core.Entities.Slide", b =>
                {
                    b.HasOne("OngProject.Core.Entities.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });
#pragma warning restore 612, 618
        }
    }
}
