// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OngProject.Infrastructure.Data;

namespace OngProject.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210727045904_userPhotoSeedTwo")]
    partial class userPhotoSeedTwo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484310",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484311",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484312",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484313",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484314",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484315",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484316",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484317",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484318",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484319",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484330",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7033"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484331",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7033"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484332",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7033"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484333",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7033"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484334",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7033"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484335",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7033"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484336",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7033"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484337",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7033"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484338",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7033"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484339",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7033"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("OngProject.Core.Entities.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(65535)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Test number 1",
                            CreatedAt = new DateTime(2021, 7, 27, 1, 59, 3, 806, DateTimeKind.Local).AddTicks(3959),
                            Image = "https://placeimg.com/640/480/any",
                            IsDeleted = false,
                            Name = "Activity number 1"
                        },
                        new
                        {
                            Id = 2,
                            Content = "Test number 2",
                            CreatedAt = new DateTime(2021, 7, 27, 1, 59, 3, 807, DateTimeKind.Local).AddTicks(5865),
                            Image = "https://placeimg.com/640/480/any",
                            IsDeleted = false,
                            Name = "Activity number 2"
                        },
                        new
                        {
                            Id = 3,
                            Content = "Test number 3",
                            CreatedAt = new DateTime(2021, 7, 27, 1, 59, 3, 807, DateTimeKind.Local).AddTicks(5932),
                            Image = "https://placeimg.com/640/480/any",
                            IsDeleted = false,
                            Name = "Activity number 3"
                        },
                        new
                        {
                            Id = 4,
                            Content = "Test number 4",
                            CreatedAt = new DateTime(2021, 7, 27, 1, 59, 3, 807, DateTimeKind.Local).AddTicks(5964),
                            Image = "https://placeimg.com/640/480/any",
                            IsDeleted = false,
                            Name = "Activity number 4"
                        },
                        new
                        {
                            Id = 5,
                            Content = "Test number 5",
                            CreatedAt = new DateTime(2021, 7, 27, 1, 59, 3, 807, DateTimeKind.Local).AddTicks(6010),
                            Image = "https://placeimg.com/640/480/any",
                            IsDeleted = false,
                            Name = "Activity number 5"
                        },
                        new
                        {
                            Id = 6,
                            Content = "Test number 6",
                            CreatedAt = new DateTime(2021, 7, 27, 1, 59, 3, 807, DateTimeKind.Local).AddTicks(6045),
                            Image = "https://placeimg.com/640/480/any",
                            IsDeleted = false,
                            Name = "Activity number 6"
                        },
                        new
                        {
                            Id = 7,
                            Content = "Test number 7",
                            CreatedAt = new DateTime(2021, 7, 27, 1, 59, 3, 807, DateTimeKind.Local).AddTicks(6072),
                            Image = "https://placeimg.com/640/480/any",
                            IsDeleted = false,
                            Name = "Activity number 7"
                        },
                        new
                        {
                            Id = 8,
                            Content = "Test number 8",
                            CreatedAt = new DateTime(2021, 7, 27, 1, 59, 3, 807, DateTimeKind.Local).AddTicks(6242),
                            Image = "https://placeimg.com/640/480/any",
                            IsDeleted = false,
                            Name = "Activity number 8"
                        },
                        new
                        {
                            Id = 9,
                            Content = "Test number 9",
                            CreatedAt = new DateTime(2021, 7, 27, 1, 59, 3, 807, DateTimeKind.Local).AddTicks(6489),
                            Image = "https://placeimg.com/640/480/any",
                            IsDeleted = false,
                            Name = "Activity number 9"
                        },
                        new
                        {
                            Id = 10,
                            Content = "Test number 10",
                            CreatedAt = new DateTime(2021, 7, 27, 1, 59, 3, 807, DateTimeKind.Local).AddTicks(6570),
                            Image = "https://placeimg.com/640/480/any",
                            IsDeleted = false,
                            Name = "Activity number 10"
                        });
                });

            modelBuilder.Entity("OngProject.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("OngProject.Core.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("OngProject.Core.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasMaxLength(65535)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("OngProject.Core.Entities.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FacebookUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("InstagramUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LinkedinUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("OngProject.Core.Entities.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("News");
                });

            modelBuilder.Entity("OngProject.Core.Entities.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutUsText")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)");

                    b.Property<string>("FacebookUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstagramUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LinkedInUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("WelcomeText")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AboutUsText = "About Ong",
                            Address = "Address Ong",
                            CreatedAt = new DateTime(2021, 7, 27, 1, 59, 3, 808, DateTimeKind.Local).AddTicks(3080),
                            Email = "Email Ong",
                            FacebookUrl = "Facebook Url",
                            Image = "https://placeimg.com/640/480/any",
                            InstagramUrl = "Instagram Url",
                            IsDeleted = false,
                            LinkedInUrl = "Linedin Url",
                            Name = "ONG",
                            Phone = "+54112563256",
                            WelcomeText = "Welcome Ong"
                        });
                });

            modelBuilder.Entity("OngProject.Core.Entities.Rol", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            ConcurrencyStamp = "3",
                            Name = "Admin",
                            NormalizedName = "Admin"
                        },
                        new
                        {
                            Id = "c7b013f0-5201-4317-abd8-c211f91b7033",
                            ConcurrencyStamp = "4",
                            Name = "Common",
                            NormalizedName = "Common"
                        });
                });

            modelBuilder.Entity("OngProject.Core.Entities.Slide", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Slides");
                });

            modelBuilder.Entity("OngProject.Core.Entities.Testimonial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("ntext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Testimonials");
                });

            modelBuilder.Entity("OngProject.Core.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Photo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484310",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5eabe111-745f-40d1-9efd-85a157e7747f",
                            Email = "mail10@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 10",
                            IsDeleted = false,
                            LastName = "LastName 10",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail10@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEBi6Hlj0gwCpVinYTpqrZLPBaZW9KTlwbIvS6IbIiZyDhRQXWTvQ9pkubBMB/OOfBQ==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "c58e74aa-fd67-44f1-b8c3-51d741a4a21c",
                            TwoFactorEnabled = false,
                            UserName = "User 10"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484311",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1bf7d15d-0ec0-499b-86d4-6befd909ef50",
                            Email = "mail11@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 11",
                            IsDeleted = false,
                            LastName = "LastName 11",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail11@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAENNfb1Y9hS21E3PpEOglcxVsciFqZcoyDQ+Gh2AZ2vYw7MmlLFc3G1uZHsT3b7VdWw==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "d3c08fbb-08b1-44a7-8dbd-eabe362c0611",
                            TwoFactorEnabled = false,
                            UserName = "User 11"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484312",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8a6ed550-9d77-4739-bec1-1c6f4836b58f",
                            Email = "mail12@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 12",
                            IsDeleted = false,
                            LastName = "LastName 12",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail12@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEJF7vosIbpKOOdtFkwsSEcE2LHwU8wQ6IxLzU+HPyQwIVxK1AeFq7PqjeEQBHYWE6Q==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "23827603-9384-4e4e-8e11-6c0853586793",
                            TwoFactorEnabled = false,
                            UserName = "User 12"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484313",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "88b01be7-2bfa-4e6b-bcb1-1729a9d3841b",
                            Email = "mail13@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 13",
                            IsDeleted = false,
                            LastName = "LastName 13",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail13@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEHR/QSooJrsBrRLgGgcIKCCWkeChfZAP/6J+zI4xTyWcn/k4+Yk/72B4iw53nDG34g==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "3b6c8d8d-de87-428a-94c2-04224a4a3382",
                            TwoFactorEnabled = false,
                            UserName = "User 13"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484314",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a8b97bfb-385e-4c77-88d9-fc7945b23e6f",
                            Email = "mail14@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 14",
                            IsDeleted = false,
                            LastName = "LastName 14",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail14@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEMM9QmUOhqsNuDI5qgKVcEXn/RlM5V2pp5uozb8kygGc3FkyQsu4oa+lJEAAnVSf/w==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "b66dd710-609b-4d63-b01f-ac59d278efdf",
                            TwoFactorEnabled = false,
                            UserName = "User 14"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484315",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "46cfc07c-2c73-4f2e-8af9-4d74d2a39d5e",
                            Email = "mail15@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 15",
                            IsDeleted = false,
                            LastName = "LastName 15",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail15@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAELgnerR7JUOhP3yulCZZ1AHOz1djvHzoYF4yw68q7f0wDkz53K2YJYtjXg34CXkZOw==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "b87a234d-e29d-433a-ae14-8b5016ad596e",
                            TwoFactorEnabled = false,
                            UserName = "User 15"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484316",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f2640ea5-3301-411c-8a4e-8e72d42d1e01",
                            Email = "mail16@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 16",
                            IsDeleted = false,
                            LastName = "LastName 16",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail16@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEPujRugGpBkTxbqVVAYHmCoc0EOwwlLdmtLEHSj12TnPQHlu1zvS6/bIu6OzvltbmA==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "1d45d241-2047-4fa3-8337-8dadf4a99af9",
                            TwoFactorEnabled = false,
                            UserName = "User 16"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484317",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e6828735-7655-4f28-a53b-b55d334a434f",
                            Email = "mail17@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 17",
                            IsDeleted = false,
                            LastName = "LastName 17",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail17@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEAtRTgmku+BCyr5yKl6jnhNhXN5jxGIw4lfnW43NU1trgua2j8Boi7vEFmXYW6eukA==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "ef0d83e3-9db4-487d-a204-cac7a13f478f",
                            TwoFactorEnabled = false,
                            UserName = "User 17"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484318",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "afc62b83-ea0c-4fa2-be8a-d166e9ae610a",
                            Email = "mail18@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 18",
                            IsDeleted = false,
                            LastName = "LastName 18",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail18@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEJkH8c+Kp/63ebx4cZn8msO8+h/+KcLk75sDqNmD9eJrDmudVtt5W6rG08LcnemEfw==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "286864b8-c444-48a0-9403-e2eb582250d0",
                            TwoFactorEnabled = false,
                            UserName = "User 18"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484319",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7f7caa08-cbd0-4cb8-8af8-269eb8c38edd",
                            Email = "mail19@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 19",
                            IsDeleted = false,
                            LastName = "LastName 19",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail19@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEJHLKRmZsXcIHpWDGIK0qTxhAMwgAJpZWQC5rti8Ds1HiVkLmymk+KPiLq98+E330A==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "e2953dbc-b762-47ea-8ae1-7f6569ab4c42",
                            TwoFactorEnabled = false,
                            UserName = "User 19"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484330",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d796ba7c-a179-41a4-b094-5431fd6fe27e",
                            Email = "mail30@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 30",
                            IsDeleted = false,
                            LastName = "LastName 30",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail30@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEJwXaGgVy+hHMhSmM0SQ0bHdl02obQorALNSN0tpkQNdCSXEfRfczjR0hoOakP1omQ==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "853f4384-f21f-46ad-a918-459136467bf3",
                            TwoFactorEnabled = false,
                            UserName = "User 30"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484331",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a626cb25-9ee2-42c8-866a-02148c0e42b6",
                            Email = "mail31@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 31",
                            IsDeleted = false,
                            LastName = "LastName 31",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail31@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEGanxyVde7F5vzQdtLdbvntsjoqI3+Li7eWmIHFEUtPmoXVlITAKUhAFd/7Wfa76NA==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "cd07aa66-1635-4c0d-83f1-23e84e124a84",
                            TwoFactorEnabled = false,
                            UserName = "User 31"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484332",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4006f09f-99c9-4b5b-96fc-97ff20a6b29c",
                            Email = "mail32@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 32",
                            IsDeleted = false,
                            LastName = "LastName 32",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail32@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEKAW2ajPBikIYAn7J2T1xIEqPHSqeakKEeLijkRdP5+4HMPtEoMZ1YIrAFKfQenyeQ==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "56294031-051d-4694-97dc-1510f021b265",
                            TwoFactorEnabled = false,
                            UserName = "User 32"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484333",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "442bcfc4-e63b-4325-a7a2-8f7f9330a791",
                            Email = "mail33@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 33",
                            IsDeleted = false,
                            LastName = "LastName 33",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail33@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEPE7YdOin0Bo6m0XTaS5ovsm5KmdEx2YzNUI9aVlD/f757U3xfWdcQZHX82b3PCjKQ==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "e1b56087-0e03-4aaf-bdbd-abf791ea7b14",
                            TwoFactorEnabled = false,
                            UserName = "User 33"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484334",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "73901004-3c62-428c-b204-43faaa630582",
                            Email = "mail34@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 34",
                            IsDeleted = false,
                            LastName = "LastName 34",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail34@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEM5gN3Uxbsy2ZqwIIav4Jnfzoih4Lm5TyCfdOiWqb3Va0cfSNQe0xryhxrzFSRVE/A==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "acd3c7a7-ebac-4ea8-b110-b773903f3335",
                            TwoFactorEnabled = false,
                            UserName = "User 34"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484335",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "82979cb5-59dd-4b98-a55b-e05eb0f88dfb",
                            Email = "mail35@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 35",
                            IsDeleted = false,
                            LastName = "LastName 35",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail35@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEAllO6cZmhFr9yCXQ7hiHouIBW82lGyHfk8KyEIwATJSEz9rwZXvSVXUf6Js9irSxw==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "8f58799a-71d3-459d-b27d-27597318b383",
                            TwoFactorEnabled = false,
                            UserName = "User 35"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484336",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "657673a9-fa76-49cf-b941-e0182673a4c9",
                            Email = "mail36@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 36",
                            IsDeleted = false,
                            LastName = "LastName 36",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail36@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAELfDD+JGVWNS6qVa6NKhMUPNVjb82GJ3rLsI3JSbqLIsxMf7y3eWi3z07w7Qnmi3Ng==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "2921101e-5630-4f62-a1eb-99ab0aa55737",
                            TwoFactorEnabled = false,
                            UserName = "User 36"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484337",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "28a51a00-8854-4d84-8ad2-fffdca1117f5",
                            Email = "mail37@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 37",
                            IsDeleted = false,
                            LastName = "LastName 37",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail37@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEExXgaSKHNkVo44C0Ypbq48W10D8jdMCjtF9vT/R+k007TYQubZHG4dfnP7B25tG3A==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "8208fa81-0540-442f-8e51-4d219ba35881",
                            TwoFactorEnabled = false,
                            UserName = "User 37"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484338",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "62defed6-d5aa-4c9b-933d-8c77c32b58bd",
                            Email = "mail38@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 38",
                            IsDeleted = false,
                            LastName = "LastName 38",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail38@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAENJ5JoiCAffy/T3cMdP8gyAkyyoj3k4Zwj0kRWNHpZLt0zz8dq17nFUcYqmGHSH2dg==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "ceff137b-0ed3-409f-a729-5618949635cb",
                            TwoFactorEnabled = false,
                            UserName = "User 38"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484339",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e6978817-f7ee-4aae-b572-aa68878beac0",
                            Email = "mail39@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 39",
                            IsDeleted = false,
                            LastName = "LastName 39",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail39@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEFaLU6KE7AkSNPhbfZqQKK2XvPIgD+59+gngTzYE4FoNtOFyg0H962E+xNqpAZ564g==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "8e532204-5e2a-4709-9a03-bbef1ef45d12",
                            TwoFactorEnabled = false,
                            UserName = "User 39"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("OngProject.Core.Entities.Rol", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("OngProject.Core.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("OngProject.Core.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("OngProject.Core.Entities.Rol", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OngProject.Core.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("OngProject.Core.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OngProject.Core.Entities.Comment", b =>
                {
                    b.HasOne("OngProject.Core.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OngProject.Core.Entities.News", b =>
                {
                    b.HasOne("OngProject.Core.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("OngProject.Core.Entities.Slide", b =>
                {
                    b.HasOne("OngProject.Core.Entities.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });
#pragma warning restore 612, 618
        }
    }
}
