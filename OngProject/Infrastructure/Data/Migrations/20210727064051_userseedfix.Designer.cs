// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OngProject.Infrastructure.Data;

namespace OngProject.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210727064051_userseedfix")]
    partial class userseedfix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484310",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484311",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484312",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484313",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484314",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484315",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484316",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484317",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484318",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484319",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484330",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7033"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484331",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7033"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484332",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7033"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484333",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7033"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484334",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7033"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484335",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7033"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484336",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7033"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484337",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7033"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484338",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7033"
                        },
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db1255484339",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7033"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("OngProject.Core.Entities.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(65535)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Test number 1",
                            CreatedAt = new DateTime(2021, 7, 27, 3, 40, 49, 824, DateTimeKind.Local).AddTicks(9925),
                            Image = "https://placeimg.com/640/480/any",
                            IsDeleted = false,
                            Name = "Activity number 1"
                        },
                        new
                        {
                            Id = 2,
                            Content = "Test number 2",
                            CreatedAt = new DateTime(2021, 7, 27, 3, 40, 49, 826, DateTimeKind.Local).AddTicks(5637),
                            Image = "https://placeimg.com/640/480/any",
                            IsDeleted = false,
                            Name = "Activity number 2"
                        },
                        new
                        {
                            Id = 3,
                            Content = "Test number 3",
                            CreatedAt = new DateTime(2021, 7, 27, 3, 40, 49, 826, DateTimeKind.Local).AddTicks(5998),
                            Image = "https://placeimg.com/640/480/any",
                            IsDeleted = false,
                            Name = "Activity number 3"
                        },
                        new
                        {
                            Id = 4,
                            Content = "Test number 4",
                            CreatedAt = new DateTime(2021, 7, 27, 3, 40, 49, 826, DateTimeKind.Local).AddTicks(6106),
                            Image = "https://placeimg.com/640/480/any",
                            IsDeleted = false,
                            Name = "Activity number 4"
                        },
                        new
                        {
                            Id = 5,
                            Content = "Test number 5",
                            CreatedAt = new DateTime(2021, 7, 27, 3, 40, 49, 826, DateTimeKind.Local).AddTicks(6137),
                            Image = "https://placeimg.com/640/480/any",
                            IsDeleted = false,
                            Name = "Activity number 5"
                        },
                        new
                        {
                            Id = 6,
                            Content = "Test number 6",
                            CreatedAt = new DateTime(2021, 7, 27, 3, 40, 49, 826, DateTimeKind.Local).AddTicks(6170),
                            Image = "https://placeimg.com/640/480/any",
                            IsDeleted = false,
                            Name = "Activity number 6"
                        },
                        new
                        {
                            Id = 7,
                            Content = "Test number 7",
                            CreatedAt = new DateTime(2021, 7, 27, 3, 40, 49, 826, DateTimeKind.Local).AddTicks(6291),
                            Image = "https://placeimg.com/640/480/any",
                            IsDeleted = false,
                            Name = "Activity number 7"
                        },
                        new
                        {
                            Id = 8,
                            Content = "Test number 8",
                            CreatedAt = new DateTime(2021, 7, 27, 3, 40, 49, 826, DateTimeKind.Local).AddTicks(6317),
                            Image = "https://placeimg.com/640/480/any",
                            IsDeleted = false,
                            Name = "Activity number 8"
                        },
                        new
                        {
                            Id = 9,
                            Content = "Test number 9",
                            CreatedAt = new DateTime(2021, 7, 27, 3, 40, 49, 826, DateTimeKind.Local).AddTicks(6341),
                            Image = "https://placeimg.com/640/480/any",
                            IsDeleted = false,
                            Name = "Activity number 9"
                        },
                        new
                        {
                            Id = 10,
                            Content = "Test number 10",
                            CreatedAt = new DateTime(2021, 7, 27, 3, 40, 49, 826, DateTimeKind.Local).AddTicks(6368),
                            Image = "https://placeimg.com/640/480/any",
                            IsDeleted = false,
                            Name = "Activity number 10"
                        });
                });

            modelBuilder.Entity("OngProject.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("OngProject.Core.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("OngProject.Core.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasMaxLength(65535)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("OngProject.Core.Entities.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FacebookUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("InstagramUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LinkedinUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("OngProject.Core.Entities.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("News");
                });

            modelBuilder.Entity("OngProject.Core.Entities.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutUsText")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)");

                    b.Property<string>("FacebookUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstagramUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LinkedInUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("WelcomeText")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AboutUsText = "About Ong",
                            Address = "Address Ong",
                            CreatedAt = new DateTime(2021, 7, 27, 3, 40, 49, 827, DateTimeKind.Local).AddTicks(5739),
                            Email = "Email Ong",
                            FacebookUrl = "Facebook Url",
                            Image = "https://placeimg.com/640/480/any",
                            InstagramUrl = "Instagram Url",
                            IsDeleted = false,
                            LinkedInUrl = "Linedin Url",
                            Name = "ONG",
                            Phone = "+54112563256",
                            WelcomeText = "Welcome Ong"
                        });
                });

            modelBuilder.Entity("OngProject.Core.Entities.Rol", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            ConcurrencyStamp = "3",
                            Name = "Admin",
                            NormalizedName = "Admin"
                        },
                        new
                        {
                            Id = "c7b013f0-5201-4317-abd8-c211f91b7033",
                            ConcurrencyStamp = "4",
                            Name = "Common",
                            NormalizedName = "Common"
                        });
                });

            modelBuilder.Entity("OngProject.Core.Entities.Slide", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Slides");
                });

            modelBuilder.Entity("OngProject.Core.Entities.Testimonial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("ntext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Testimonials");
                });

            modelBuilder.Entity("OngProject.Core.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Photo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484310",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b191b6bc-26e9-4b1e-962f-0d6f26fbc905",
                            Email = "mail10@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 10",
                            IsDeleted = false,
                            LastName = "LastName 10",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail10@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEMX/nXeKR2MHMqzPV3cg1yqzDoE8VPwYrf1qVpiR111tn6jkqCD4lMjmIpiQZJNb1g==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "c1969789-cbc4-42ae-95a2-01b1be81747a",
                            TwoFactorEnabled = false,
                            UserName = "mail10@mail.com"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484311",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b7c7f226-12b8-4b24-b202-2861dded0323",
                            Email = "mail11@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 11",
                            IsDeleted = false,
                            LastName = "LastName 11",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail11@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAENjoQ4rlra2RKs+Y71yekMYYAXRLNGXQdwJJ+8mEQ3Iwk1o01LeTLEOYjcz2rRJTpA==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "498ad946-806e-493b-8b83-081c2c80e142",
                            TwoFactorEnabled = false,
                            UserName = "mail11@mail.com"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484312",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "97e9976e-7f0a-48cd-8a08-9d1ed91ed53e",
                            Email = "mail12@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 12",
                            IsDeleted = false,
                            LastName = "LastName 12",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail12@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEAGU4qZgdLmh6mihyCPoI2zWorzWwFFfVH09YgsPnpLXvcfMMVD1SAmjyXiqve07dA==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "523b794b-a4de-4f4a-ae19-83cf64a83960",
                            TwoFactorEnabled = false,
                            UserName = "mail12@mail.com"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484313",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1f691221-01e4-41d7-92e8-86b818afee00",
                            Email = "mail13@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 13",
                            IsDeleted = false,
                            LastName = "LastName 13",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail13@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEPkcRW0Kwo0XVZjY0Ilax0d3yUSunO0ajEHylOgrK59Dp8SHONfChQwoIHzMfqAvRQ==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "9e1856c6-a3ae-4a36-a17e-5c9699d9bf1b",
                            TwoFactorEnabled = false,
                            UserName = "mail13@mail.com"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484314",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "25403458-bd7c-4217-ac1e-afb990d79791",
                            Email = "mail14@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 14",
                            IsDeleted = false,
                            LastName = "LastName 14",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail14@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEJLRjcvQ040sFz5Jk2DxGdbXGzYwgpLAP50Pn4dxkBrMBT4anf5qOcG2/gmtLbr0Lw==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "8395a18d-9608-410e-9f9b-f1f78378f3a7",
                            TwoFactorEnabled = false,
                            UserName = "mail14@mail.com"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484315",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e616bb82-a170-4862-ab3f-cfc64e8ad7a2",
                            Email = "mail15@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 15",
                            IsDeleted = false,
                            LastName = "LastName 15",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail15@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEAExvdSGVifh4Jx+ZwY4vVjW4B8O0aiyWmIBIHqhXYU0kw+pXuJyG9Hax2Z+F+JGyg==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "4fb86aa0-224b-429e-a227-e02cbc4e7939",
                            TwoFactorEnabled = false,
                            UserName = "mail15@mail.com"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484316",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5360bc56-8af4-4b0d-bbd0-313680026001",
                            Email = "mail16@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 16",
                            IsDeleted = false,
                            LastName = "LastName 16",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail16@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEO5UER6xjpu7pWDmWkcosWG0fiOgh4UVdTeS5eCQGILQS3MikhA/azcNgSsbt2wfzA==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "2707088f-01f3-48a3-9bfe-8d113e9d688f",
                            TwoFactorEnabled = false,
                            UserName = "mail16@mail.com"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484317",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cefe0936-cb56-4b39-832f-e3b19495605e",
                            Email = "mail17@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 17",
                            IsDeleted = false,
                            LastName = "LastName 17",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail17@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEEBN/uu206bWHZtv8NnSo1E9WzKUS6mg0vPZnnXXpjGTT37/q8QTFjxmc/xEOESMCw==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "1398fbc5-8d74-484c-b896-735a71499a65",
                            TwoFactorEnabled = false,
                            UserName = "mail17@mail.com"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484318",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b048ea80-cb52-409d-9a8b-71f8c5f53af2",
                            Email = "mail18@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 18",
                            IsDeleted = false,
                            LastName = "LastName 18",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail18@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEK27rEMdzLCYmW8plcC5yk6gEdB+OozsE6y9xWr5BEPMilsKxXqt+EPcJx9/VV8q9g==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "7f0bed6f-7f1a-4aa0-844f-c8fec6647bbb",
                            TwoFactorEnabled = false,
                            UserName = "mail18@mail.com"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484319",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "01eeb18e-fb74-48b7-aee8-e5b1fdb0531c",
                            Email = "mail19@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 19",
                            IsDeleted = false,
                            LastName = "LastName 19",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail19@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEHCeCfwke+ogc8ghmgxi05aIMMoc8LLFvuVD/YfnoMygjQX95cNGX0ymSjQQ2jbCxQ==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "ac452125-c14f-4b17-8acc-7095a6d883a8",
                            TwoFactorEnabled = false,
                            UserName = "mail19@mail.com"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484330",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bdec1aeb-04a3-4442-a5a4-760d597f9d3c",
                            Email = "mail30@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 30",
                            IsDeleted = false,
                            LastName = "LastName 30",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail30@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEFDmPBewGR1cYdpjYbf1kC8vPxnqixwAzEbtXr/4F3cbsX4/kdtkNScWHrzbV+PU7A==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "904bdc95-d000-4d7c-9880-77eff23ebdd4",
                            TwoFactorEnabled = false,
                            UserName = "mail30@mail.com"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484331",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cacc1b60-0a08-4f93-a30a-093d60bb7962",
                            Email = "mail31@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 31",
                            IsDeleted = false,
                            LastName = "LastName 31",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail31@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEHr2XakM1+TZeUr0ZSjzYHYg+5V0YQJd8Jl20V3XAcT06w0o78R35M2gqdxQwojWGg==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "1364073c-a2eb-45df-b278-19dd532567d9",
                            TwoFactorEnabled = false,
                            UserName = "mail31@mail.com"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484332",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9f245120-0afd-4f4f-a581-db3eee52751f",
                            Email = "mail32@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 32",
                            IsDeleted = false,
                            LastName = "LastName 32",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail32@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEAT4PzO7RSujl5pZaaWTa7N/0DPPEtwas80l24eQjnkMmBTs/jZJUpo6HBpulkYZ+Q==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "e963cf2b-10f5-4650-b652-8899bc28ae46",
                            TwoFactorEnabled = false,
                            UserName = "mail32@mail.com"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484333",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0dfc142d-0ef7-4671-a7fe-53e7c9f5c76b",
                            Email = "mail33@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 33",
                            IsDeleted = false,
                            LastName = "LastName 33",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail33@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEMAQ/8CDq/4CFwoIHGK/LBryYWhMiOtBliDUxtZl9wNVWqJ9I1A+g+hnXLPNDxUzSg==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "a944ade2-6b54-4cf1-a3c1-c4e3bc1ff5cd",
                            TwoFactorEnabled = false,
                            UserName = "mail33@mail.com"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484334",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "16a901b4-6046-480b-a6ad-4eab896efd96",
                            Email = "mail34@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 34",
                            IsDeleted = false,
                            LastName = "LastName 34",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail34@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEH+E7ZeEHrCAol4BRrJyNtc6Z8AZkgALleUuiSsNInq6Q0xlWh0giLxo1ILiL0SVPA==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "b95bdfd3-304e-4062-b082-55ebd3acc6a6",
                            TwoFactorEnabled = false,
                            UserName = "mail34@mail.com"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484335",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1b9d115f-8c6c-42d5-8909-aa5da878db56",
                            Email = "mail35@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 35",
                            IsDeleted = false,
                            LastName = "LastName 35",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail35@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEPpk4W8xSPBD9Av0kfjcBKU8PksooUqBX19FtXGrNd6K+aclBTHxi1fmfZjAwg+RoQ==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "cf5d0cb8-c42c-4791-aa24-2a06530a3bd5",
                            TwoFactorEnabled = false,
                            UserName = "mail35@mail.com"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484336",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5fea78c2-e104-463f-b00b-b89d66ed34f4",
                            Email = "mail36@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 36",
                            IsDeleted = false,
                            LastName = "LastName 36",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail36@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAECY/xR60Qu/beg55rPjTlSwGsETGeDXS3qb3vWryhVTyKuK28C8fMp9W0ySQ2iJM5Q==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "76ca1f77-2b61-4fa1-be37-221a5ba509de",
                            TwoFactorEnabled = false,
                            UserName = "mail36@mail.com"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484337",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b5931fac-9f6e-4df9-af41-015c90847b83",
                            Email = "mail37@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 37",
                            IsDeleted = false,
                            LastName = "LastName 37",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail37@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEB42HEF85SXnqWwrZuzbUolYOlea490fR4A96Hxkffq5Zi5iT/lLIUU5GStcgtSULg==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "ea552341-7fd0-4373-bbb5-ff52bd42f849",
                            TwoFactorEnabled = false,
                            UserName = "mail37@mail.com"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484338",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4efb88f8-93a1-4f46-b138-a475fdb018ca",
                            Email = "mail38@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 38",
                            IsDeleted = false,
                            LastName = "LastName 38",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail38@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAED1MusfcRK318Xd2+4wU8s+4HqdsVulzCGQgqy0pK+ERt2LUUBOdZv5jffC+mMeZpQ==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "85bf65de-6de7-4a1b-9700-aa74c55dd909",
                            TwoFactorEnabled = false,
                            UserName = "mail38@mail.com"
                        },
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db1255484339",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c363d853-0b70-412e-acbf-c3d77b2e5759",
                            Email = "mail39@mail.com",
                            EmailConfirmed = false,
                            FirstName = "User 39",
                            IsDeleted = false,
                            LastName = "LastName 39",
                            LockoutEnabled = false,
                            NormalizedEmail = "mail39@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEFvC2FTbONew140nMAZtkNQZdN9ymAVGPcTjIhXgEYGmKctYipymBHVWN5/xAsRDAw==",
                            PhoneNumber = "No Available",
                            PhoneNumberConfirmed = false,
                            Photo = "https://placeimg.com/640/480/any",
                            SecurityStamp = "db3ec1ca-a80c-450d-a52b-af72712c219c",
                            TwoFactorEnabled = false,
                            UserName = "mail39@mail.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("OngProject.Core.Entities.Rol", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("OngProject.Core.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("OngProject.Core.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("OngProject.Core.Entities.Rol", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OngProject.Core.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("OngProject.Core.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OngProject.Core.Entities.Comment", b =>
                {
                    b.HasOne("OngProject.Core.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OngProject.Core.Entities.News", b =>
                {
                    b.HasOne("OngProject.Core.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("OngProject.Core.Entities.Slide", b =>
                {
                    b.HasOne("OngProject.Core.Entities.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });
#pragma warning restore 612, 618
        }
    }
}
